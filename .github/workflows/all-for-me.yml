name: ALL for myself

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'cnki'

jobs:
  vitest:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    services:
      redis:
        image: redis
        ports:
          - 6379/tcp
        options: --entrypoint redis-server
    name: Vitest on Node 22
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      - name: Install dependencies (pnpm)
        run: pnpm i
      - name: Run post-install script for dependencies
        run: pnpm rb
      - name: Build routes
        run: pnpm build
      - name: Test all and generate coverage
        run: pnpm run vitest:coverage --reporter=github-actions
        env:
          REDIS_URL: redis://localhost:${{ job.services.redis.ports[6379] }}/
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4

  puppeteer:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 22 ]
        chromium:
          - name: bundled Chromium
            dependency: ''
            environment: '{ "PUPPETEER_SKIP_DOWNLOAD": "0" }'
          - name: Chromium from Ubuntu
            dependency: chromium-browser
            environment: '{ "PUPPETEER_SKIP_DOWNLOAD": "1" }'
          - name: Chrome from Google
            dependency: google-chrome-stable
            environment: '{ "PUPPETEER_SKIP_DOWNLOAD": "1" }'
    name: Vitest puppeteer on Node ${{ matrix.node-version }} with ${{ matrix.chromium.name }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies (pnpm)
        run: pnpm i
        env: ${{ fromJSON(matrix.chromium.environment) }}
      - name: Run postinstall script for dependencies
        run: pnpm rb
        env: ${{ fromJSON(matrix.chromium.environment) }}
      - name: Build routes
        run: pnpm build
        env: ${{ fromJSON(matrix.chromium.environment) }}
      - name: Install Chromium
        if: ${{ matrix.chromium.dependency != '' }}
        # 'chromium-browser' from Ubuntu APT repo is a dummy package. Its version (85.0.4183.83) means
        # nothing since it calls Snap (disgusting!) to install Chromium, which should be up-to-date.
        # That's not really a problem since the Chromium-bundled Docker image is based on Debian bookworm,
        # which provides up-to-date native packages.
        run: |
          set -eux
          curl -s "https://dl.google.com/linux/linux_signing_key.pub" | gpg --dearmor |
            sudo tee /etc/apt/trusted.gpg.d/google-chrome.gpg > /dev/null
          echo "deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main" |
            sudo tee /etc/apt/sources.list.d/google-chrome.list > /dev/null
          sudo apt-get update
          sudo apt-get install -yq --no-install-recommends ${{ matrix.chromium.dependency }}
      - name: Test puppeteer
        run: |
          set -eux
          export CHROMIUM_EXECUTABLE_PATH="$(which ${{ matrix.chromium.dependency }})"
          pnpm run vitest puppeteer
        env: ${{ fromJSON(matrix.chromium.environment) }}

  docker:
    runs-on: ubuntu-latest
    needs:
      - puppeteer
      - vitest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: 'registry.cn-hangzhou.aliyuncs.com'
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_TAGS }}:latest
